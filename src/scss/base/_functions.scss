@use "sass:string";

$colors: (
    "white": $text-white,
    "black": $text-black,
);

@each $key,
$val in $colors {
    .text-#{$key} {
        color: $val
    }

    @for $i from 1 through 9 {
        .text-#{key}-light-#{$i} {
            color: mix(white, $val, $i * 10%)
        }

        .text-#{key}-dark-#{$i} {
            color: mix(black, $val, $i * 10%)
        }
    }
}

$base-font-size: 1em;

$font-size: (
    "sm": $base-font-size * 1,
    "md": $base-font-size * 1.5,
    "lg": $base-font-size * 2,
    "xl": $base-font-size * 2.5,
    "xxl": $base-font-size * 3,
);

@each $key,
$val in $font-size {
    .text-#{$key} {
        font-size: $val
    }
}


$base-size: 1em;

$sizes: (
    "size-1": $base-size * 0.25,
    "size-2": $base-size * 0.5,
    "size-3": $base-size * 0.75,
    "size-4": $base-size * 1,
    "size-5": $base-size * 1.5,
    "size-6": $base-size * 2,
    "size-7": $base-size * 2.5,
    "size-8": $base-size * 3,
);

$sides: inline, inline-start, inline-end, block, block-start;

@each $size-number,
$size-value in $sizes {
    $number: string.slice($size-number, 6);

    .padding {
        &-#{$number} {
            padding: $size-value;
        }

        @each $side in $sides {
            &-#{$side}-#{$number} {
                padding-#{$side}: $size-value;
            }
        }
    }

    .margin {
        &-#{$number} {
            margin: $size-value;
        }

        @each $side in $sides {
            &-#{$side}-#{$number} {
                margin-#{$side}: $size-value;
            }
        }
    }
}